x thread.req.paramname
  p1: revert to 'shalls'

x thread.req.exceptions
  p1:  shal -> shall

x thread.req.timing
  p4: make note normative

x thread.thread.constr
  p1: add removed{that}

x thread.thread.destr
  p1: should be effects

x thread.mutex.requirements.mutex
 p1 & p2 de-shall

x thread.mutex.class
 p4: can -> might

x thread.mutex.recursive
 p3: can back to may

x thread.timedmutex.recursive
 p3: can back to may

x thread.lock.unique
 p1: can -> may

thread.lock.unique.cons
 p8, p15, p18: remove shall
 
thread.lock.unique.locking
 p5, p11, p17: remove shall

x thread.lock.shared
 p1: can -> may

thread.lock.algorithm
 p1, p4: remove shall


